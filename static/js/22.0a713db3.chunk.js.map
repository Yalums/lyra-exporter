{"version":3,"file":"static/js/22.0a713db3.chunk.js","mappings":"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","sources":["utils/exportHelper.js"],"sourcesContent":["// utils/exportHelper.js\r\n// 导出相关功能\r\n\r\n// 导出为Markdown\r\nexport const exportChatAsMarkdown = (processedData, config) => {\r\n  const { meta_info, chat_history } = processedData;\r\n  const lines = [];\r\n\r\n  // 添加YAML前置元数据\r\n  if (config.exportObsidianMetadata) {\r\n    lines.push(\"---\");\r\n    lines.push(`title: ${meta_info.title || '对话记录'}`);\r\n    lines.push(`date: ${new Date().toISOString().split('T')[0]}`);\r\n\r\n    // 添加自定义属性\r\n    if (config.obsidianProperties && config.obsidianProperties.length > 0) {\r\n      config.obsidianProperties.forEach(prop => {\r\n        const { name, value } = prop;\r\n        \r\n        // 处理列表类型的值\r\n        if (value.includes(\",\") && !value.includes(\"[\")) {\r\n          const values = value.split(\",\").map(v => v.trim());\r\n          lines.push(`${name}:`);\r\n          values.forEach(v => {\r\n            lines.push(`  - ${v}`);\r\n          });\r\n        } else {\r\n          // 处理简单值\r\n          lines.push(`${name}: ${value}`);\r\n        }\r\n      });\r\n    }\r\n\r\n    // 添加标签\r\n    if (config.obsidianTags && config.obsidianTags.length > 0) {\r\n      lines.push(\"tags:\");\r\n      config.obsidianTags.forEach(tag => {\r\n        lines.push(`  - ${tag}`);\r\n      });\r\n    }\r\n\r\n    lines.push(\"---\");\r\n    lines.push(\"\");\r\n  }\r\n\r\n  // 添加标题和元信息\r\n  lines.push(`# ${meta_info.title || '对话记录'}`);\r\n  lines.push(`*创建时间: ${meta_info.created_at || '未知'}*`);\r\n  lines.push(`*导出时间: ${new Date().toLocaleString('zh-CN')}*`);\r\n  \r\n  // 如果是仅导出已完成的消息，添加说明\r\n  if (config.exportMarkedOnly) {\r\n    lines.push(`*导出类型: 仅包含已完成标记的消息*`);\r\n  }\r\n\r\n  lines.push(\"\");\r\n  lines.push(\"---\");\r\n  lines.push(\"\");\r\n\r\n  // 如果没有消息，添加提示\r\n  if (!chat_history || chat_history.length === 0) {\r\n    lines.push(\"*没有符合条件的消息*\");\r\n    return lines.join(\"\\n\");\r\n  }\r\n\r\n  // 添加消息内容\r\n  let exportedCount = 0;\r\n  chat_history.forEach(msg => {\r\n    // 如果设置为只导出已标记并且该消息未被标记，则跳过\r\n    // 注意：在App.js中已经进行了过滤，这里是双重保险\r\n    if (config.exportMarkedOnly && !config.markedItems?.has(msg.index)) {\r\n      return;\r\n    }\r\n\r\n    exportedCount++;\r\n    const sender = msg.sender_label;\r\n    const timestamp = msg.timestamp;\r\n    const msgIndex = msg.index + 1; // 序号从1开始\r\n\r\n    // 添加分支标记\r\n    let branchMarker = \"\";\r\n    if (msg.is_branch_point) {\r\n      branchMarker = \" 🔀\";\r\n    } else if (msg.branch_level > 0) {\r\n      branchMarker = ` ↳${msg.branch_level}`;\r\n    }\r\n\r\n    lines.push(`## ${msgIndex}. ${sender}${branchMarker}`);\r\n\r\n    // 根据配置决定是否显示时间戳\r\n    if (config.includeTimestamps) {\r\n      lines.push(`*${timestamp}*`);\r\n    }\r\n\r\n    lines.push(\"\");\r\n\r\n    // 添加正文内容\r\n    if (msg.display_text) {\r\n      lines.push(msg.display_text);\r\n      lines.push(\"\");\r\n    }\r\n\r\n    // 添加思考过程\r\n    if (msg.thinking && config.includeThinking) {\r\n      lines.push(\"<details>\");\r\n      lines.push(\"<summary>思考过程</summary>\");\r\n      lines.push(\"\");\r\n      lines.push(\"```\");\r\n      lines.push(msg.thinking);\r\n      lines.push(\"```\");\r\n      lines.push(\"</details>\");\r\n      lines.push(\"\");\r\n    }\r\n\r\n    // 添加artifacts内容\r\n    if (msg.artifacts && msg.artifacts.length > 0 && config.includeArtifacts) {\r\n      msg.artifacts.forEach(artifact => {\r\n        const artifactId = artifact.id || '未知';\r\n        const artifactType = artifact.type || '未知';\r\n        const artifactTitle = artifact.title || '无标题';\r\n\r\n        lines.push(\"<details>\");\r\n        lines.push(`<summary>Artifact: ${artifactTitle} (ID: ${artifactId})</summary>`);\r\n        lines.push(\"\");\r\n\r\n        // 显示类型\r\n        lines.push(`**类型**: \\`${artifactType}\\``);\r\n        lines.push(\"\");\r\n\r\n        const command = artifact.command || '';\r\n        if (command === 'create') {\r\n          const content = artifact.content || '';\r\n          const language = artifact.language || '';\r\n\r\n          if (language) {\r\n            lines.push(`**语言**: \\`${language}\\``);\r\n            lines.push(\"\");\r\n            lines.push(\"**内容**:\");\r\n            lines.push(`\\`\\`\\`${language}`);\r\n            lines.push(content);\r\n            lines.push(\"```\");\r\n          } else {\r\n            lines.push(\"**内容**:\");\r\n            lines.push(\"```\");\r\n            lines.push(content);\r\n            lines.push(\"```\");\r\n          }\r\n        } else if (command === 'update' || command === 'rewrite') {\r\n          const oldStr = artifact.old_str || '';\r\n          const newStr = artifact.new_str || '';\r\n\r\n          lines.push(`**操作**: \\`${command}\\``);\r\n          lines.push(\"\");\r\n          lines.push(\"**原始文本**:\");\r\n          lines.push(\"```\");\r\n          lines.push(oldStr);\r\n          lines.push(\"```\");\r\n          lines.push(\"\");\r\n          lines.push(\"**新文本**:\");\r\n          lines.push(\"```\");\r\n          lines.push(newStr);\r\n          lines.push(\"```\");\r\n        }\r\n\r\n        lines.push(\"</details>\");\r\n        lines.push(\"\");\r\n      });\r\n    }\r\n\r\n    // 添加工具使用记录\r\n    if (msg.tools && msg.tools.length > 0 && config.includeTools) {\r\n      msg.tools.forEach(tool => {\r\n        const toolName = tool.name;\r\n\r\n        lines.push(\"<details>\");\r\n        lines.push(`<summary>工具: ${toolName}</summary>`);\r\n        lines.push(\"\");\r\n\r\n        // 查询内容\r\n        if (toolName === \"web_search\" && tool.query) {\r\n          lines.push(`**搜索查询**: \\`${tool.query}\\``);\r\n          lines.push(\"\");\r\n        }\r\n\r\n        // 工具输入\r\n        if (tool.input && typeof tool.input === 'object') {\r\n          lines.push(\"**输入参数**:\");\r\n          lines.push(\"```json\");\r\n          try {\r\n            lines.push(JSON.stringify(tool.input, null, 2));\r\n          } catch (error) {\r\n            lines.push(String(tool.input));\r\n          }\r\n          lines.push(\"```\");\r\n          lines.push(\"\");\r\n        }\r\n\r\n        // 工具结果\r\n        if (tool.result) {\r\n          lines.push(\"**结果**:\");\r\n\r\n          if (tool.result.is_error) {\r\n            lines.push(\"> ⚠️ 工具执行出错\");\r\n            lines.push(\"\");\r\n          }\r\n\r\n          // Web搜索结果特殊处理\r\n          if (toolName === \"web_search\") {\r\n            const resultContent = tool.result.content || [];\r\n            const maxResults = Math.min(resultContent.length, 5); // 最多显示5个结果\r\n\r\n            if (resultContent.length > 0) {\r\n              lines.push(\"搜索结果:\");\r\n              lines.push(\"\");\r\n\r\n              for (let i = 0; i < maxResults; i++) {\r\n                const item = resultContent[i];\r\n                if (!item || typeof item !== 'object') continue;\r\n\r\n                const title = item.title || \"无标题\";\r\n                const url = item.url || \"#\";\r\n\r\n                lines.push(`${i + 1}. [${title}](${url})`);\r\n              }\r\n\r\n              if (resultContent.length > maxResults) {\r\n                lines.push(`*...还有 ${resultContent.length - maxResults} 个结果未显示*`);\r\n              }\r\n\r\n              lines.push(\"\");\r\n            }\r\n          }\r\n        }\r\n\r\n        lines.push(\"</details>\");\r\n        lines.push(\"\");\r\n      });\r\n    }\r\n\r\n    // 添加引用\r\n    if (msg.citations && msg.citations.length > 0 && config.includeCitations) {\r\n      lines.push(\"<details>\");\r\n      lines.push(\"<summary>引用来源</summary>\");\r\n      lines.push(\"\");\r\n\r\n      lines.push(\"| 标题 | 来源 |\");\r\n      lines.push(\"| --- | --- |\");\r\n\r\n      msg.citations.forEach(citation => {\r\n        const title = citation.title || \"未知来源\";\r\n        const url = citation.url || \"#\";\r\n        const source = url.includes('/') ? url.split('/')[2] : '未知网站';\r\n        lines.push(`| [${title}](${url}) | ${source} |`);\r\n      });\r\n\r\n      lines.push(\"</details>\");\r\n      lines.push(\"\");\r\n    }\r\n\r\n    lines.push(\"---\");\r\n    lines.push(\"\");\r\n  });\r\n\r\n  // 如果设置了仅导出已完成，在末尾添加统计信息\r\n  if (config.exportMarkedOnly) {\r\n    lines.push(\"\");\r\n    lines.push(`*共导出 ${exportedCount} 条已完成的消息*`);\r\n  }\r\n\r\n  return lines.join(\"\\n\");\r\n};\r\n\r\n// 保存文本到文件\r\nexport const saveTextFile = (text, fileName) => {\r\n  try {\r\n    const blob = new Blob([text], { type: 'text/markdown' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = fileName;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('保存文件失败:', error);\r\n    alert('保存文件失败，请重试');\r\n    return false;\r\n  }\r\n};"],"names":["exportChatAsMarkdown","processedData","config","meta_info","chat_history","lines","exportObsidianMetadata","push","title","Date","toISOString","split","obsidianProperties","length","forEach","prop","name","value","includes","values","map","v","trim","obsidianTags","tag","created_at","toLocaleString","exportMarkedOnly","join","exportedCount","msg","_config$markedItems","markedItems","has","index","sender","sender_label","timestamp","msgIndex","branchMarker","is_branch_point","branch_level","includeTimestamps","display_text","thinking","includeThinking","artifacts","includeArtifacts","artifact","artifactId","id","artifactType","type","artifactTitle","command","content","language","oldStr","old_str","newStr","new_str","tools","includeTools","tool","toolName","query","input","JSON","stringify","error","String","result","is_error","resultContent","maxResults","Math","min","i","item","url","citations","includeCitations","citation","source","saveTextFile","text","fileName","blob","Blob","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","console","alert"],"sourceRoot":""}